module tb_mux2to1;



reg 	in0	;
reg	in1	;
reg	sel	;

wire	out1	;
wire	out2	;
wire 	out3	;

mux2to1_assign dut_1 (	.sel	(sel),
			.in0	(in0),
			.in1	(in1),
			.out	(out1));

mux2to1_if dut_2     (  .sel	(sel),
			.in0	(in0),
			.in1	(in1),
			.out	(out2));

mux2to1_case dut_3   (	.sel	(sel),
			.in0	(in0),
			.in1	(in1),
			.out	(out3));



initial begin
	$display("Using mux2to1_assign : out1");
	$display("Using mux2to1_if : out2");
	$display("Using mux2to1_case : out3");
	$display("=========================================================================================================");
	$display(" sel 	in1   in0   out1   out2   out3");  
	$display("=========================================================================================================");
	#(50) 	{sel, in0, in1} = 3'b_000;  #(50)	$display("  %b\t%b\t%b\t%b\t%b\t%b", sel, in1, in0, out1, out2, out3);
	#(50) 	{sel, in0, in1} = 3'b_001;  #(50)	$display("  %b\t%b\t%b\t%b\t%b\t%b", sel, in1, in0, out1, out2, out3);
	#(50) 	{sel, in0, in1} = 3'b_010;  #(50)	$display("  %b\t%b\t%b\t%b\t%b\t%b", sel, in1, in0, out1, out2, out3);
	#(50) 	{sel, in0, in1} = 3'b_011;  #(50)	$display("  %b\t%b\t%b\t%b\t%b\t%b", sel, in1, in0, out1, out2, out3);
	#(50) 	{sel, in0, in1} = 3'b_100;  #(50)	$display("  %b\t%b\t%b\t%b\t%b\t%b", sel, in1, in0, out1, out2, out3);
	#(50) 	{sel, in0, in1} = 3'b_101;  #(50)	$display("  %b\t%b\t%b\t%b\t%b\t%b", sel, in1, in0, out1, out2, out3);
	#(50) 	{sel, in0, in1} = 3'b_110;  #(50)	$display("  %b\t%b\t%b\t%b\t%b\t%b", sel, in1, in0, out1, out2, out3);
	#(50) 	{sel, in0, in1} = 3'b_111;  #(50)	$display("  %b\t%b\t%b\t%b\t%b\t%b", sel, in1, in0, out1, out2, out3);
	#(50)	$finish	;
end

endmodule



































 
